package test.file.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

import test.controller.Action;
import test.controller.ActionForward;
import test.file.dao.FileDao;
import test.file.dto.FileDto;

public class FileUpdateAction extends Action{

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) {
		String realPath=application.getRealPath("/upload");

		//콘솔에 테스트로 출력해보기
		System.out.println(realPath);
		
		//최대 업로드 사이즈
		int sizeLimit=1024*1000*50;  //50 Mbyte
		//cos.jar 라이브러리에 있는 클래스를 이용해서 객체 생성하기
		MultipartRequest mr=new MultipartRequest(request,//cos.jar에서 있는것
				realPath,
				sizeLimit,
				"utf-8",
				new DefaultFileRenamePolicy());//cos.jar에서 있는것
		//업로드된 파일에 대한 정보는 mr 객체를 통해서 얻어온다.
		String writer=mr.getParameter("writer");
		String title=mr.getParameter("title");
		String orgFileName=mr.getOriginalFileName("myFile");
		String saveFileName=mr.getFilesystemName("myFile");
		long fileSize=mr.getFile("myFile").length();
		//파일의 정보를 FileDto 객체에 담아서
		FileDto dto=new FileDto();
		dto.setWriter(writer);
		dto.setTitle(title);
		dto.setOrgFileName(orgFileName);
		dto.setSaveFileName(saveFileName);
		
		//FileDao객체를 이용해서 DB에 저장하고
		boolean isSuccess=FileDao.getInstance().insert(dto);		
		return null;
	}
	
}
